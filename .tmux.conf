# ***Global Variables***

# Define the colours used in this configuration
# Uses Catppuccin V2.0's Mocha theme
# See: https://github.com/catppuccin/catppuccin

# Main Colours
thm_rosewater="#f5e0dc"
thm_flamingo="#f2cdcd"
thm_pink="#f5c2e7"
thm_mauve="#cba6f7"
thm_red="#f38ba8"
thm_maroon="#eba0ac"
thm_peach="#fab387"
thm_yellow="#f9e2af"
thm_green="#a6e3a1"
thm_teal="#94e2d5"
thm_sky="#89dceb"
thm_sapphire="#74c7ec"
thm_blue="#89b4fa"
thm_lavender="#b4befe"

# Grayscale
thm_text="#cdd6f4"
thm_subtext1="#bac2de"
thm_subtext0="#a6adc8"
thm_overlay2="#9399b2"
thm_overlay1="#7f849c"
thm_overlay0="#6c7086"
thm_surface2="#585b70"
thm_surface1="#45475a"
thm_surface0="#313244"
thm_base="#1e1e2e"
thm_mantle="#181825"
thm_crust="#11111b"

# ***List of plugins***

# Plugin Manager
set -g @plugin 'tmux-plugins/tpm'

# Sensible Tmux Defaults
set -g @plugin 'tmux-plugins/tmux-sensible'

# Mode indicator
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

# ***Plugin Settings***

# TMUX mode indicator

# prompt to display when tmux prefix key is pressed
set -g @mode_indicator_prefix_prompt ' WAIT '

# prompt to display when tmux is in copy mode
set -g @mode_indicator_copy_prompt ' COPY '

# prompt to display when tmux has synchronized panes
set -g @mode_indicator_sync_prompt ' SYNC '

# prompt to display when tmux is in normal mode
set -g @mode_indicator_empty_prompt ' TMUX '

# style values for prefix prompt
set -g @mode_indicator_prefix_mode_style "bg=${thm_green},fg=${thm_base}"

# style values for copy prompt
set -g @mode_indicator_copy_mode_style "bg=${thm_yellow},fg=${thm_base}"

# style values for sync prompt
set -g @mode_indicator_sync_mode_style "bg=${thm_red},fg=${thm_base}"

# style values for empty prompt
set -g @mode_indicator_empty_mode_style "bg=${thm_blue},fg=${thm_base}"

# ***TMUX Settings***

# ---Genetal---

# Start numbering windows from 1
set -g base-index 1

# Start numbering panes from 1
set -g pane-base-index 1

# ---===Colours & Style===---

# Set the terminal mode
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# Set the background colour
set -g status-bg ${thm_mantle}

# Set the foreground colour
set -g status-fg ${thm_text}

# ---Statusline---

# Set the Style and Layout of the left end of the tmux status bar
set-window-option -g status-left "#{tmux_mode_indicator} #S #[bg=${thm_mantle}] "
set-window-option -g status-left-style bg=${thm_surface0},fg=${thm_subtext0}

# Set the Style and Layout of the right end of the tmux status bar
set-window-option -g status-right " #(whoami) #[bg=${thm_surface0}] #(hostname) #[fg=${thm_base}, bg=${thm_blue}] %I:%M %p "
set-window-option -g status-right-style bg=${thm_surface1},fg=${thm_subtext0}

# Set the Style and Layout of inactive tabs
set-window-option -g window-status-format "#[fg=${thm_overlay0},bg=${thm_base}]▎   #I: #W   #[fg=${thm_base},bg=${thm_overlay0}]▊"

# Set the Style and Layout of the active tabs
set-window-option -g window-status-current-format "▎   #[fg=${thm_subtext1}]#I: #W   #[fg=${thm_base},bg=${thm_green}]▊"
set-window-option -g window-status-current-style fg="${thm_green}",bg=black


# ---Panes---

# Set the Style of the pane borders
set -g pane-active-border-style bg=default,fg=${thm_text}
set -g pane-border-style fg=${thm_overlay0}

# ---Messages---

# Set the Style used by messages
set -g message-style fg="${thm_pink}",bg="${thm_mantle}",align="centre"
set -g message-command-style fg="${thm_pink}",bg="${thm_mantle}",align="centre"

# Move Tmux's status bar to the top of the window
set-option -g status-position top

# Remove the gaps between tabs
set-window-option -g window-status-separator ''

# Position the active windows to the left of the statusline
set -g status-justify left

# ---Key Bindings---

# Rebind the prefix key to C-a
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# Check if the current active pane is (n)vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# If the active window is vim, send the keystrokes to it instead 
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Check the tmux version, the following bind differs by version
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

# In copy mode don't send key strokes
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Reload this source file
bind r source-file ~/.tmux.conf

# Check if tpm is installed, install it if not
if "test ! -d ~/.tmux/plugins/tpm" \
    "run 'git clone http://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialise the TMUX plugin manager [KEEP AT BOTTOM]
run '~/.tmux/plugins/tpm/tpm'
